//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	_Z9add_valuej
.visible .global .align 4 .u32 value;
.visible .global .align 1 .b8 output_buffer[1];
.visible .global .align 4 .b8 add_fn[4];
.visible .global .align 4 .b8 mult_fn[4];
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo5valueE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo6add_fnE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo7mult_fnE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 1 .b8 _ZN21rti_internal_typename5valueE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename6add_fnE[13] = {105, 110, 116, 95, 111, 112, 101, 114, 97, 116, 111, 114, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename7mult_fnE[13] = {105, 110, 116, 95, 111, 112, 101, 114, 97, 116, 111, 114, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum5valueE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum6add_fnE = 4920;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum7mult_fnE = 4920;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic5valueE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic6add_fnE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic7mult_fnE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation5valueE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation6add_fnE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation7mult_fnE[1];

.visible .func  (.param .b32 func_retval0) _Z9add_valuej(
	.param .b32 _Z9add_valuej_param_0
)
{
	.reg .b32 	%r<4>;


	ld.param.u32 	%r1, [_Z9add_valuej_param_0];
	ld.global.u32 	%r2, [value];
	add.s32 	%r3, %r2, %r1;
	st.param.b32 	[func_retval0+0], %r3;
	ret;

}
	// .globl	_Z14multiply_valuej
.visible .func  (.param .b32 func_retval0) _Z14multiply_valuej(
	.param .b32 _Z14multiply_valuej_param_0
)
{
	.reg .b32 	%r<4>;


	ld.param.u32 	%r1, [_Z14multiply_valuej_param_0];
	ld.global.u32 	%r2, [value];
	mul.lo.s32 	%r3, %r2, %r1;
	st.param.b32 	[func_retval0+0], %r3;
	ret;

}
	// .globl	_Z5startv
.visible .entry _Z5startv()
{
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<14>;


	ld.global.u32 	%r5, [value];
	mov.u64 	%rd10, 0;
	ld.global.u32 	%r1, [add_fn];
	// begin inline asm
	call (%rd1), _rt_callable_program_from_id_v2_64, (%r1, %rd10);
	// end inline asm
	mov.u32 	%r3, 1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r5;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b32 _);
	call (retval0), 
	%rd1, 
	(
	param0
	)
	, prototype_0;
	ld.param.b32 	%r6, [retval0+0];
	} // callseq 0
	ld.global.u32 	%r2, [mult_fn];
	// begin inline asm
	call (%rd3), _rt_callable_program_from_id_v2_64, (%r2, %rd10);
	// end inline asm
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r6;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b32 _);
	call (retval0), 
	%rd3, 
	(
	param0
	)
	, prototype_1;
	ld.param.b32 	%r7, [retval0+0];
	} // callseq 1
	mov.u64 	%rd13, output_buffer;
	cvta.global.u64 	%rd6, %rd13;
	mov.u32 	%r4, 4;
	// begin inline asm
	call (%rd5), _rt_buffer_get_64, (%rd6, %r3, %r4, %rd10, %rd10, %rd10, %rd10);
	// end inline asm
	st.u32 	[%rd5], %r7;
	ret;

}
	// .globl	_Z10do_nothingv
.visible .entry _Z10do_nothingv()
{



	ret;

}

