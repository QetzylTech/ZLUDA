//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	_Z5startv
.visible .global .align 1 .b8 output_buffer[1];
.visible .global .texref image1;
.visible .global .align 4 .u32 image2;
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo6image2E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 1 .b8 _ZN21rti_internal_typename6image2E[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum6image2E = 4919;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic6image2E[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation6image2E[1];

.visible .entry _Z5startv()
{
	.reg .f32 	%f<49>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<51>;


	mov.u64 	%rd49, output_buffer;
	cvta.global.u64 	%rd2, %rd49;
	mov.u32 	%r24, 2;
	mov.u32 	%r22, 16;
	mov.u64 	%rd48, 0;
	// begin inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd48, %rd48, %rd48, %rd48);
	// end inline asm
	mov.f32 	%f32, 0f00000000;
	mov.u64 	%rd45, 1;
	mov.u64 	%rd34, 2;
	tex.2d.v4.f32.f32 	{%f33, %f34, %f35, %f36}, [image1, {%f32, %f32}];
	mov.u64 	%rd46, 3;
	st.v4.f32 	[%rd1], {%f33, %f34, %f35, %f36};
	// begin inline asm
	call (%rd7), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd45, %rd48, %rd48, %rd48);
	// end inline asm
	mov.f32 	%f30, 0f3F800000;
	tex.2d.v4.f32.f32 	{%f37, %f38, %f39, %f40}, [image1, {%f30, %f32}];
	st.v4.f32 	[%rd7], {%f37, %f38, %f39, %f40};
	// begin inline asm
	call (%rd13), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd48, %rd45, %rd48, %rd48);
	// end inline asm
	tex.2d.v4.f32.f32 	{%f41, %f42, %f43, %f44}, [image1, {%f32, %f30}];
	st.v4.f32 	[%rd13], {%f41, %f42, %f43, %f44};
	// begin inline asm
	call (%rd19), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd45, %rd45, %rd48, %rd48);
	// end inline asm
	tex.2d.v4.f32.f32 	{%f45, %f46, %f47, %f48}, [image1, {%f30, %f30}];
	st.v4.f32 	[%rd19], {%f45, %f46, %f47, %f48};
	// begin inline asm
	call (%rd25), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd48, %rd34, %rd48, %rd48);
	// end inline asm
	ld.global.u32 	%r11, [image2];
	// begin inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r11, %r24, %f32, %f32, %f32, %f32);
	// end inline asm
	st.v4.f32 	[%rd25], {%f1, %f2, %f3, %f4};
	// begin inline asm
	call (%rd31), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd45, %rd34, %rd48, %rd48);
	// end inline asm
	ld.global.u32 	%r15, [image2];
	// begin inline asm
	call (%f9, %f10, %f11, %f12), _rt_texture_get_f_id, (%r15, %r24, %f30, %f32, %f32, %f32);
	// end inline asm
	st.v4.f32 	[%rd31], {%f9, %f10, %f11, %f12};
	// begin inline asm
	call (%rd37), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd48, %rd46, %rd48, %rd48);
	// end inline asm
	ld.global.u32 	%r19, [image2];
	// begin inline asm
	call (%f17, %f18, %f19, %f20), _rt_texture_get_f_id, (%r19, %r24, %f32, %f30, %f32, %f32);
	// end inline asm
	st.v4.f32 	[%rd37], {%f17, %f18, %f19, %f20};
	// begin inline asm
	call (%rd43), _rt_buffer_get_64, (%rd2, %r24, %r22, %rd45, %rd46, %rd48, %rd48);
	// end inline asm
	ld.global.u32 	%r23, [image2];
	// begin inline asm
	call (%f25, %f26, %f27, %f28), _rt_texture_get_f_id, (%r23, %r24, %f30, %f30, %f32, %f32);
	// end inline asm
	st.v4.f32 	[%rd43], {%f25, %f26, %f27, %f28};
	ret;

}

